                +       
        ----------------       
        *               b
    --------    
    c       d

위와 같은 트리가 있을 때,
- preorder (전위순회 : 연산자가 앞에 있다)는 연산자를 먼저 방문 : 
    위 -> 좌 -> 우
    +*cdb
- inorder (중위순회 : 연산자가 중간에 있다)는 연산자를 중간에 방문 : 
    좌 -> 위 -> 우 (지나가게 되더라도 탐색은 좌측의 터미널 노드 부터 시작)
    c*d+b
- postorder (후위순회 : 연산자가 뒤에 있다)는 연산자를 마지막에 방문 : 
    좌 -> 우 -> 위 (지나가게 되더라도 탐색은 좌측의 터미널 노드 부터 시작)
    cd*b+

binary search tree 에서 inorder traverse 를 하면 정렬이 된다.

                20       
        ----------------       
        10              30
    ----            --------
    5               25      40

위 트리를 중위순회 (inorder) 로 탐색하면
5, 10, 20, 25, 30, 40 순서로 탐색된다. 정렬된 결과.

노드 삭제시,
정렬된 결과에서 20의 앞과 뒤에 있는것(10, 25)이 successor(후계자) 이다.
predecessor(전임자) 는 20. 
inorder successor는 right child의 left 터미널 노드이다.
20의 inorder successor는 25이다.
20의 inorder predecessor 10이다.

binary search tree 에서 차일드가 2개인 노드 삭제시
inorder successor를 삭제 위치로 올리는 방법으로 해라.
